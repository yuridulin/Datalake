stages:
  - build
  - push
  - deploy

build-server:
  stage: build

  tags:
    - push-build

  script:
    - docker build -t datalake:latest  -f ./DatalakeServer/Dockerfile .
    - docker tag datalake:latest "$CI_REPOS_URL"/datalake:"$CI_COMMIT_TAG"
    - docker tag datalake:latest "$CI_REPOS_URL"/datalake:latest

  only:
    - /^\d+.\d+.\d+$/

push-server:
  stage: push

  tags:
    - push-build

  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"

  script:
    - docker push "$CI_REPOS_URL"/datalake:"$CI_COMMIT_TAG"
    - docker push "$CI_REPOS_URL"/datalake:latest

  only:
    - /^\d+.\d+.\d+$/

deploy-server:
  stage: deploy

  tags:
    - local-ve

  image:
    name: lachlanevenson/k8s-kubectl:latest
    entrypoint: ["/bin/sh", "-c"]

  script:
    - kubectl delete -n sinus pods -l app=datalake

  only:
    - /^\d+.\d+.\d+$/û


# stages:
#   - copy
#   - kill
#   - build server
#   - build webconsole
#   - deploy

# copy-project:
#   stage: copy
#   only: [tags]
#   tags:
#     - buildopc
#   script:
#     - xcopy /s .\Datalake\Datalake "C:\app\Datalake" /K /D /H /Y
#     - xcopy /s .\Datalake\datalakeclient "C:\app\datalakeclient" /K /D /H /Y

# kill-previous:
#   stage: kill
#   only: [tags]
#   when: on_success
#   allow_failure: true
#   tags:
#     - buildopc
#   script:
#     - taskkill /f /im Datalake.exe

# build-server:
#   stage: build server
#   only: [tags]
#   tags:
#     - buildopc
#   script:
#     - cd C:\app\Datalake
#     - msbuild /t:Restore
#     - msbuild /t:Build /p:Configuration=Release

# build-webconsole:
#   stage: build webconsole
#   only: [tags]
#   tags:
#     - buildopc
#   script:
#     - cd C:\app\datalakeclient
#     - npm install
#     - npm run build
#     - xcopy /s .\build "C:\Dist\Datalake\Content" /K /D /H /Y

# deploy-server:
#   stage: deploy
#   only: [tags]
#   tags:
#     - buildopc
#   script:
#     - sc start Datalake