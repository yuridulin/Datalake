// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;

#nullable disable

namespace DatalakeDatabase.Migrations
{
	[DbContext(typeof(DatalakeEfContext))]
	partial class DatalakeEfContextModelSnapshot : ModelSnapshot
	{
		protected override void BuildModel(ModelBuilder modelBuilder)
		{
#pragma warning disable 612, 618
			modelBuilder
					.HasAnnotation("ProductVersion", "8.0.3")
					.HasAnnotation("Relational:MaxIdentifierLength", 63);

			NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

			modelBuilder.Entity("DatalakeDatabase.Models.Block", b =>
					{
						b.Property<int>("Id")
											.ValueGeneratedOnAdd()
											.HasColumnType("integer");

						NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

						b.Property<string>("Description")
											.HasColumnType("text");

						b.Property<string>("Name")
											.IsRequired()
											.HasColumnType("text");

						b.Property<int>("ParentId")
											.HasColumnType("integer");

						b.Property<string>("PropertiesRaw")
								.HasColumnType("text");

						b.HasKey("Id");

						b.ToTable("Blocks");
					});

			modelBuilder.Entity("DatalakeDatabase.Models.Log", b =>
					{
						b.Property<int>("Category")
											.HasColumnType("integer");

						b.Property<DateTime>("Date")
											.HasColumnType("timestamp without time zone");

						b.Property<string>("Details")
											.HasColumnType("text");

						b.Property<int?>("Ref")
											.HasColumnType("integer");

						b.Property<string>("Text")
											.IsRequired()
											.HasColumnType("text");

						b.Property<int>("Type")
											.HasColumnType("integer");

						b.Property<string>("User")
											.HasColumnType("text");

						b.ToTable("Logs");
					});

			modelBuilder.Entity("DatalakeDatabase.Models.RelBlockTag", b =>
					{
						b.Property<int>("BlockId")
											.HasColumnType("integer");

						b.Property<string>("Name")
											.HasColumnType("text");

						b.Property<int>("TagId")
											.HasColumnType("integer");

						b.Property<int>("Type")
											.HasColumnType("integer");

						b.ToTable("Rel_Block_Tag", (string)null);
					});

			modelBuilder.Entity("DatalakeDatabase.Models.RelTagInput", b =>
					{
						b.Property<int>("InputTagId")
											.HasColumnType("integer");

						b.Property<int>("TagId")
											.HasColumnType("integer");

						b.Property<string>("VariableName")
											.HasColumnType("text");

						b.ToTable("Rel_Tag_Input", (string)null);
					});

			modelBuilder.Entity("DatalakeDatabase.Models.Setting", b =>
					{
						b.Property<string>("Key")
											.IsRequired()
											.HasColumnType("text");

						b.Property<string>("Value")
											.HasColumnType("text");

						b.ToTable("Settings");
					});

			modelBuilder.Entity("DatalakeDatabase.Models.Source", b =>
					{
						b.Property<string>("Address")
										.HasColumnType("text");

						b.Property<int>("Id")
											.ValueGeneratedOnAdd()
											.HasColumnType("integer");

						NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

						b.Property<string>("Name")
							.HasColumnType("text");

						b.Property<int>("Type")
							.HasColumnType("integer");

						b.ToTable("Sources");
					});

			modelBuilder.Entity("DatalakeDatabase.Models.Tag", b =>
					{
						b.Property<int>("Id")
							.ValueGeneratedOnAdd()
							.HasColumnType("integer");

						NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

						b.Property<string>("Description")
							.HasColumnType("text");

						b.Property<string>("Formula")
							.HasColumnType("text");

						b.Property<short>("Interval")
							.HasColumnType("smallint");

						b.Property<bool>("IsCalculating")
							.HasColumnType("boolean");

						b.Property<bool>("IsScaling")
							.HasColumnType("boolean");

						b.Property<float>("MaxEu")
							.HasColumnType("real")
							.HasColumnName("MaxEU");

						b.Property<float>("MaxRaw")
											.HasColumnType("real");

						b.Property<float>("MinEu")
							.HasColumnType("real")
							.HasColumnName("MinEU");

						b.Property<float>("MinRaw")
							.HasColumnType("real");

						b.Property<string>("Name")
							.IsRequired()
							.HasColumnType("text");

						b.Property<int>("SourceId")
							.HasColumnType("integer");

						b.Property<string>("SourceItem")
							.HasColumnType("text");

						b.Property<int>("Type")
							.HasColumnType("integer");

						b.HasKey("Id");

						b.ToTable("Tags");
					});

			modelBuilder.Entity("DatalakeDatabase.Models.User", b =>
					{
						b.Property<int>("AccessType")
							.HasColumnType("integer");

						b.Property<string>("FullName")
							.IsRequired()
							.HasColumnType("text");

						b.Property<string>("Hash")
							.IsRequired()
							.HasColumnType("text");

						b.Property<string>("Name")
							.IsRequired()
							.HasColumnType("text");

						b.Property<string>("StaticHost")
							.HasColumnType("text");

						b.ToTable("Users");
					});
#pragma warning restore 612, 618
		}
	}
}
