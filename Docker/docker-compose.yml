version: '3.9'

services:
  postgres:
    image: timescale/timescaledb:2.21.0-pg17
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: datalake-docker
    volumes:
      - ./postgres/database:/var/lib/postgresql/data
    ports:
      - "7610:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  create-keycloak-db:
    image: postgres:17
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      bash -c "
      psql -h postgres -U postgres -tc \"SELECT 1 FROM pg_database WHERE datname = 'keycloak'\" |
      grep -q 1 ||
      psql -h postgres -U postgres -c 'CREATE DATABASE keycloak;'"
    environment:
      PGPASSWORD: postgres

  keycloak:
    image: quay.io/keycloak/keycloak:25.0.0
    container_name: keycloak
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command:
      - start-dev
      - --import-realm
    volumes:
      - ./keycloak:/opt/keycloak/data/import
    ports:
      - "7620:8080"
    depends_on:
      create-keycloak-db:
        condition: service_completed_successfully

  server:
    image: ${DOCKER_REGISTRY-}server
    container_name: server
    build:
      context: ../
      dockerfile: ./Apps/Server/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATALAKE_HOST: host.docker.internal
      DATALAKE_PORT: 7610
      DATALAKE_DB: datalake
      DATALAKE_DB_USER: postgres
      DATALAKE_DB_PASS: postgres
      APP_VERSION: DEV
    ports:
      - 7630:8080
    volumes:
      - "../Apps/Server/storage:/app/storage"

  client:
    build:
      context: ../Apps/Client/datalake
      dockerfile: Dockerfile
    ports:
      - "7640:7640"
    volumes:
      - ../Apps/Client/datalake:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0 --port 7640"
