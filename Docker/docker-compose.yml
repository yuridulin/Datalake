version: '3.9'

services:
  postgres:
    image: timescale/timescaledb:2.21.0-pg17
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: datalake-docker
    volumes:
      - ./postgres/database:/var/lib/postgresql/data
    ports:
      - "2345:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:25.0.0
    container_name: keycloak
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command:
      - start-dev
      - --import-realm
    volumes:
      - ./keycloak:/opt/keycloak/data/import
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy

  datalakeserver:
    image: ${DOCKER_REGISTRY-}datalakeserver
    container_name: datalakeserver
    build:
      context: ../
      dockerfile: ./Apps/Server/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATALAKE_HOST: host.docker.internal
      DATALAKE_DB: datalake-docker
      DATALAKE_DB_USER: postgres
      DATALAKE_DB_PASS: postgres
      APP_VERSION: DEV
    ports:
      - 8000:8080
    volumes:
      - "../Apps/Server/storage:/app/storage"
