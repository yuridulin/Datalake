using System.ComponentModel;

namespace Datalake.Contracts.Public.Enums;

/// <summary>
/// Тип получения данных с источника
/// </summary>
public enum SourceType
{
	/// <summary>
	/// Заглушка для неопределённого источника
	/// </summary>
	[Description("Заглушка для неопределённого источника")]
	NotSet = -666,

	/// <summary>
	/// Теги, значения которых считаются на стороне БД как самое близкое по модулю среди пороговых значений
	/// </summary>
	[Description("Теги, значения которых считаются на стороне БД как самое близкое по модулю среди пороговых значений")]
	Thresholds = -4,

	/// <summary>
	/// Теги, значения которых считаются на стороне БД как агрегированные значения тега-источника за прошедший период
	/// </summary>
	[Description("Теги, значения которых считаются на стороне БД как агрегированные значения тега-источника за прошедший период")]
	Aggregated = -3,

	/// <summary>
	/// Пользовательские теги с ручным вводом значений в произвольный момент времени
	/// </summary>
	[Description("Пользовательские теги с ручным вводом значений в произвольный момент времени")]
	Manual = -2,

	/// <summary>
	/// Пользовательские теги, значения которых вычисляются по формулам на основе значений других тегов"
	/// </summary>
	[Description("Пользовательские теги, значения которых вычисляются по формулам на основе значений других тегов")]
	Calculated = -1,

	/// <summary>
	/// Системные теги с данными о текущей работе различных частей приложения
	/// </summary>
	[Description("Системные теги с данными о текущей работе различных частей приложения")]
	System = 0,

	/// <summary>
	/// INOPC-сервер
	/// </summary>
	Inopc = 1,

	/// <summary>
	/// Обновленный на .NET Core Datalake
	/// </summary>
	Datalake = 3,
}
