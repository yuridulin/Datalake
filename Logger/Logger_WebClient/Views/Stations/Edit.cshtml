@model string

@using (var db = new DatabaseContext())
{
	var station = db.Stations
		.FirstOrDefault(x => x.Endpoint == Model);

	if (station == null)
	{
		<div class="error">
			Станция с сетевым именем <b>@Model</b> не найдена
		</div>
		return;
	}

	var configs = db.StationsConfigs
		.ToList();

	<div class="view-caption">
		<div>
			<b>Редактирование станции @Model</b>
		</div>
		<div>
			<button class="button" onclick="show('#delete')">Удалить</button>
			<button class="button" onclick="go('@Url.Action("", "stations")')">К списку</button>
		</div>
	</div>

	<div class="view-body" form="@Url.Action("DoEdit", "Stations")">
		<input type="hidden" name="@nameof(station.Endpoint)" value="@station.Endpoint" />
		<div class="view-form-field">
			<div class="view-form-field-name">
				<span>Описание</span>
			</div>
			<div>
				<textarea name="@nameof(station.Description)">@station.Description</textarea>
			</div>
		</div>
		<div class="view-form-field">
			<div class="view-form-field-name">
				<span>Используемая конфигурация агента</span>
			</div>
			<div>
				<select name="@nameof(station.StationConfigId)">
					<option value="0">Без конфигурации</option>
					@foreach (var config in configs)
					{
						<option value="@config.Id" @(config.Id == station.StationConfigId ? "selected" : "")>@config.Name</option>
					}
				</select>
			</div>
		</div>

		<div class="view-form-buttons">
			<button class="button" onclick="submit()">Сохранить</button>
		</div>
	</div>
}