@using (var db = new DatabaseContext())
{
	var configs = db.StationsConfigs
		.Select(x => new { x.Id, x.Name })
		.ToList();

	var stations = db.Stations
		.ToList()
		.Where(x => x.IsAlive)
		.Select(x => new
		{
			Station = x,
			Config = configs.FirstOrDefault(y => y.Id == x.StationConfigId)?.Name ?? "",
		})
		.OrderBy(x => x.Station.DeployStatus == StationDeployState.Installed ? 0
			: (x.Station.DeployStatus == StationDeployState.Installing
				|| x.Station.DeployStatus == StationDeployState.WaitForInstall
				|| x.Station.DeployStatus == StationDeployState.WaitForUninstall
				|| x.Station.DeployStatus == StationDeployState.Uninstalling) ? 1 : 2)
		.ThenBy(x => x.Station.Endpoint)
		.ToList();

	<div class="view-caption">
		<div>
			<b>Список станций онлайн</b>
		</div>
		<div>
			<a href="#/stations/create" class="button">Добавить</a>
			<button class="button">Сканировать</button>
		</div>
	</div>
	<div class="view-table-header">
		<div>
			<span style="width: 5em;">Версия</span>
			<span>Станция</span>
			<span style="width: 30%;">Конфигурация</span>
			<span style="width: 17em;">Состояние</span>
		</div>
	</div>
	<div class="view-table-body">
		@foreach (var x in stations)
		{
			<a href="#/stations/details/@x.Station.Endpoint">
				<span style="width: 5em;">
					<span class="led led-@(x.Station.IsAlive ? "on" : "off")">@x.Station.AgentVersion</span>
				</span>
				<span>
					<span>@x.Station.Endpoint</span>
				</span>
				<span style="width: 30%;">
					<span>@x.Config</span>
				</span>
				<span style="width: 16em;">
					<span>@x.Station.DeployText()</span>
				</span>
			</a>
		}
	</div>
}
