@model int

@using LinqToDB;

@using (var db = new DatabaseContext())
{
	var filter = db.LogsFilters
		.Where(x => x.Id == Model)
		.FirstOrDefault();

	if (filter == null)
	{
		<div class="error">
			Фильтр <b>№@Model</b> не найден
		</div>
		return;
	}

	var chQuery = from rel in db.Rel_LogFilter_Channel.Where(x => x.LogFilterId == filter.Id)
				  from ch in db.Channels.InnerJoin(x => x.Id == rel.ChannelId)
				  select ch;

	var channels = chQuery.ToList();

	var cfgQuery = from rel in db.Rel_StationConfig_LogFilter.Where(x => x.LogFilterId == filter.Id)
				   from cfg in db.StationsConfigs.InnerJoin(x => x.Id == rel.StationConfigId)
				   select cfg;

	var configs = cfgQuery.ToList();

	<div class="view-caption">
		<div>
			<b>Просмотр фильтра @filter.Name</b>
		</div>
		<div>
			<button class="button" onclick="go('@Url.Action("edit", "filters", new { Id = filter.Id })')">Изменить</button>
			<button class="button" onclick="go('@Url.Action("", "filters")')">К списку</button>
		</div>
	</div>

	<div class="view-body">
		<div class="view-info">
			<div>@filter.Description</div>
			<div>@(filter.Allow ? "Разрешающий" : "Запрещающий")</div>
			<div>
				Компьютеры:
				@{
					string[] endpoints = filter.Endpoints.Split(new[] { ";" }, StringSplitOptions.RemoveEmptyEntries).ToArray();
					if (endpoints.Length == 0)
					{
						<i>все</i>
					}
					else
					{
						foreach (var s in endpoints)
						{
							<i>@s</i>
						}
					}
				}
			</div>
			<div>
				Журналы:
				@{
					string[] journals = filter.Journals.Split(new[] { ";" }, StringSplitOptions.RemoveEmptyEntries).ToArray();
					if (journals.Length == 0)
					{
						<i>все</i>
					}
					else
					{
						foreach (var s in journals)
						{
							<i>@s</i>
						}
					}
				}
			</div>
			<div>
				Источники:
				@{
					string[] sources = filter.Sources.Split(new[] { ";" }, StringSplitOptions.RemoveEmptyEntries).ToArray();
					if (sources.Length == 0)
					{
						<i>все</i>
					}
					else
					{
						foreach (var s in sources)
						{
							<i>@s</i>
						}
					}
				}
			</div>
			<div>
				EventId:
				@{
					string[] ids = filter.EventIds.Split(new[] { ";" }, StringSplitOptions.RemoveEmptyEntries).ToArray();
					if (ids.Length == 0)
					{
						<i>все</i>
					}
					else
					{
						foreach (var s in ids)
						{
							<i>@s</i>
						}
					}
				}
			</div>
			<div>
				Категории:
				@{
					string[] categories = filter.Categories.Split(new[] { ";" }, StringSplitOptions.RemoveEmptyEntries).ToArray();
					if (categories.Length == 0)
					{
						<i>все</i>
					}
					else
					{
						foreach (var s in categories)
						{
							<i>@s</i>
						}
					}
				}
			</div>
			<div>
				Типы:
				@{
					string[] types = filter.Types.Split(new[] { ";" }, StringSplitOptions.RemoveEmptyEntries).ToArray();
					if (types.Length == 0)
					{
						<i>все</i>
					}
					else
					{
						foreach (var s in types)
						{
							<i>@s</i>
						}
					}
				}
			</div>
			<div>
				Используемые каналы:
				@{
					if (channels.Count == 0)
					{
						<i>ни одного</i>
					}
					else
					{
						foreach (var ch in channels)
						{
							<a class="button" href="#/channels/details/@ch.Id">@ch.Name</a>
						}
					}
				}
			</div>
			<div>
				Конфигурации с этим фильтром:
				@{
					if (configs.Count == 0)
					{
						<i>ни одной</i>
					}
					else
					{
						foreach (var cfg in configs)
						{
							<a class="button" href="#/channels/details/@cfg.Id">@cfg.Name</a>
						}
					}
				}
			</div>
		</div>

		@if (filter.Allow)
		{
			var logs = db.Logs
				.Where(x => x.LogFilterId == filter.Id)
				.OrderByDescending(x => x.TimeStamp)
				.Take(30)
				.ToList();

			<div class="view-minitable">
				<div class="view-minitable-title">Сообщения@(logs.Count == 0 ? " не найдены" : "")</div>
				@if (logs.Count > 0)
				{
					<div class="view-minitable-body">
						<table>
							@foreach (var log in logs)
							{
								<tr>
									<td>@log.TimeStamp.ToString("dd.MM.yyyy HH:mm")</td>
									<td>@log.Type</td>
									<td>@log.Message</td>
								</tr>
							}
						</table>
					</div>
				}
			</div>
		}
	</div>
}
